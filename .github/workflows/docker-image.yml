name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        include:
          - os: macos-latest
            stage: build
          - os: ubuntu-latest
            stage: scan-vulnerabilities
          - os: ubuntu-latest
            stage: code-quality-coverage

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install Dependencies
        run: npm install

      - name: Build Application
        if: matrix.stage == 'build'
        run: npm run build

      - name: Set up Trivy
        if: matrix.stage == 'scan-vulnerabilities'
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.17.2/trivy_0.17.2_Linux-64bit.deb
          sudo dpkg -i trivy_0.17.2_Linux-64bit.deb

      - name: Scan Container Image
        if: matrix.stage == 'scan-vulnerabilities'
        run: trivy -q --exit-code 1 -f json -o trivy-report.json CONTAINER_IMAGE_NAME

      # Add steps for code quality and coverage under the appropriate stage

  deploy-kubernetes:
    runs-on: local
    needs: [build, scan-vulnerabilities, code-quality-coverage]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Authenticate Docker Registry
        run: echo ${{ secrets.DOCKER_REGISTRY_PASSWORD }} | docker login -u ${{ secrets.DOCKER_REGISTRY_USERNAME }} --password-stdin CONTAINER_REGISTRY

      - name: Build and Push Docker Image
        run: |
          docker build -t CONTAINER_IMAGE_NAME .
          docker tag CONTAINER_IMAGE_NAME CONTAINER_REGISTRY/CONTAINER_IMAGE_NAME:latest
          docker push fathimafarhana2k/sample-app:tagname:latest

      - name: Set up kubectl
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Deploy to Kubernetes
        run: kubectl apply -f kubernetes/



